name: Code test and analysis Altinn.Platform.Models
on:
  push:
    branches: [ main ]
    paths:
      - 'Altinn.Platform.Models/**'
  pull_request:
    branches: [ main ]
    types: [opened, synchronize, reopened]
    paths:
      - 'Altinn.Platform.Models/**'
  workflow_dispatch:
jobs:
  build-test-analyze:
    name: Build and Test
    if: ((github.event_name == 'pull_request' && github.event.pull_request.head.repo.fork == false) || github.event_name == 'push') && github.repository_owner == 'Altinn'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: |
            8.0.x
      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 17
      - name: Cache SonarCloud packages
        uses: actions/cache@v4
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Install SonarCloud scanners
        run: |
          dotnet tool install --global dotnet-sonarscanner
      - name: Build & Test
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
            dotnet-sonarscanner begin /k:"Altinn_altinn-platform-models" /o:"altinn" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.cs.opencover.reportsPaths="**/coverage.opencover.xml"

            dotnet build Altinn.Platform.Models/Altinn.Platform.Models.sln -v q

            dotnet test Altinn.Platform.Models/Altinn.Platform.Models.sln \
            -v q \
            --collect:"XPlat Code Coverage" \
            --results-directory TestResults/ \
            --logger "trx;" \
            --configuration release \
            -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=opencover

      - name: Complete sonar analysis
        if: always()
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
      - name: Process .NET test result
        if: always()
        uses: NasAmin/trx-parser@v0.5.0
        with:
          TRX_PATH: ${{ github.workspace }}/TestResults
          REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}